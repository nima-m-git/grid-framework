@import 'reset';

$row-padding: 5vw; /*change on media queries */
$col-width: ((100vw - ($row-padding * 2)) / 47) * 3;
$gutter-width: (100vw - ($row-padding * 2)) / 47;
$col-margin: $gutter-width / 2;


@mixin grid-unit($span) {
    margin: 0 $col-margin;
    width: (($col-width + $col-margin) * $span);
}


//      Grid System      \\
.row {
    width: 100vw;
    padding: 0 $row-padding;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;

    @for $i from 1 through 12 {
        .col-#{$i} {
            @include grid-unit($i);
            display: flex;
        }
    }
}


@media (min-width: 481px) and (max-width: 768px) {
    .row {
        @for $i from 1 through 12 {
            .col-sm-#{$i} {
                @include grid-unit($i)
            }
        }
    }
}

@media (min-width: 769px) and (max-width: 1024px) {
    .row {
        @for $i from 1 through 12 {
            .col-md-#{$i} {
                @include grid-unit($i)
            }
        }
    }
}

@media (min-width: 1025px) and (max-width: 1200px) {
    .row {
        @for $i from 1 through 12 {
            .col-lg-#{$i} {
                @include grid-unit($i)
            }
        }
    }
}

@media (max-width: 1201px) {
    .row {
        @for $i from 1 through 12 {
            .col-xl-#{$i} {
                @include grid-unit($i)
            }
        }
    }
}


//      Flex Settings       \\
.flex {
    display: flex;
}

.flex-end {
    justify-content: flex-end;
}

.flex-centered {
    justify-content: center;
}

.flex-col {
    flex-direction: column;
}

.align-items-center {
    align-items: center;
}

.align-start {
    align-items: flex-start;
}

.space-btwn {
    justify-content: space-between;
}